;-------------------------------------------------------------------------------------
;
; Targets.ini file
; ================
;
; This file specifies a list of targets for the 20-sim C-Code Generation process.
; These targets are specified further in their own sections.
;
; You can create your own targets by modifying the contents of this file.
; Best is to save your own copy of this file with another name, modify it
; and refer to your new targets.ini file in the Tools->Options->C-Code Generation 
; dialog of 20-sim.
;
; Please have a look at the 20-sim Help file that explains
; a lot more on targets and the C-Code Generation process itself!
;
; Possible targets for 20-sim C-Code Generation
;
[targets]
StandaloneFMU 1.0
StandaloneFMU 2.0

; Generate C-Code for a selected Submodel
;
[StandaloneFMU 1.0]
targetName="FMU 1.0 export for 20-sim submodel (GitHub)"
iconFile="FMU.ico"
description="This C-code generation template generates a standalone co-simulation FMU from a 20-sim submodel. Downloaded from github.com/controllab/fmi-export-20sim"
templateDirectory="StandaloneFMU"

; Define custom tokens
%FMIVERSION%=1.0

; Supported Integration Methods
integrationMethods=Discrete;Euler;RungeKutta2;RungeKutta4;VodeAdams;MeBDFi

; the tokenparser file itself
templateFiles=src\TokenParser.xml
templateFiles=src\tokens.xml
templateFiles=src\fmiTokens.xml
templateFiles=makeFMU.bat

; the default output directory
targetDirectory="c:\temp\%SUBMODEL_NAME%"
%FORMAJORVERSION%=4
%FORMINORVERSION%=7
%FORMAJORBUILD%=0
%FORMINORBUILD%=0
preCommand="del /S /Q %GENERATION_DIR%\*.*"
postCommand="makeFMU.bat"

[StandaloneFMU 2.0]
targetName="FMU 2.0 export for 20-sim submodel (GitHub)"
iconFile="FMU.ico"
description="This C-code generation template generates a standalone co-simulation FMU from a 20-sim submodel. Downloaded from github.com/controllab/fmi-export-20sim"
templateDirectory="StandaloneFMU"

; Define custom tokens
%FMIVERSION%=2.0

; Supported Integration Methods
integrationMethods=Discrete;Euler;RungeKutta2;RungeKutta4;VodeAdams;MeBDFi

; the tokenparser file itself
templateFiles=src\TokenParser.xml
templateFiles=src\tokens.xml
templateFiles=src\fmitokens.xml
templateFiles=makeFMU.bat

; the default output directory
targetDirectory="c:\temp\%SUBMODEL_NAME%"

%FORMAJORVERSION%=4
%FORMINORVERSION%=7
%FORMAJORBUILD%=0
%FORMINORBUILD%=0
preCommand="del /S /Q %GENERATION_DIR%\*.*"
postCommand="makeFMU.bat"

; Target section entries:
; =======================
;
;   targetName=
;       the name that will appear in the 20-sim C-Code Generation Dialog.
;
;   iconFile=
;       the name of a icon file (.ico) which contains an icon to appear in the
;       20-sim C-Code Generation Dialog.
;
;   description=
;       the string that will appear in the description field in the C-Code
;       Generation Dialog
;
;   SubmodelSelection=
;       TRUE (default)
;       FALSE
;       determines whether C-Code is generated for the complete 20-sim
;       model or that a submodel selection is required
;
;   preCommand=
;      a Command which will be executed in the target directory before that the 
;      C-Code will be generated.
;
;   templateDirectory=
;      here the pathname where the template files for the C-Code can be found
;      can be specified. The default name is the target name in the "ccode" 
;      directory of 20-sim.
;      If no full path is specified then as offset the "ccode" directory in 20-sim
;      is taken. The name may be in double-quotes, but this is not necessary.
;
;   templateFiles=
;      Specifies a list of files, ';'-separated, which specify what files are 
;      generated in the targetDirectory. A find/replace of keywords is done by
;      20-sim. Names may be in double-quotes, but this is not necessary.
; 
;   targetDirectory=
;      this holds the default target directory where the files will be generated.
;      this will appear in the 20-sim dialog box when C-Code is generated and can
;      can be overruled. Names may be in double-quotes, but this is not necessary.
;
;   postCommand=
;      a Command which will be executed in the target directory after that the 
;      C-Code has been generated. For example a "mex" command for simulink.
;      but also the name of a batch-file(.bat) can be specified, so that a make
;      command can be invoked.
;
;   newLineCharacter=
;      0 = CRLF (0x0d0a = DOS Standard, default)
;      1 = CR   (0x0d = Macintosh Standard)
;      2 = LF   (0x0a = Unix Standard)
;
;   %KEYWORD%=value
;      This (re)defines the keyword "KEYWORD" and gives it the contents "value".
;      Own keywords can be defined in this manner as well.
;
;      %XX_TIME%=someTime
;      will redefine the time variable with the value "someTime"
;
;
; Recognized keywords (tokens):
; =============================
;
; The following keywords (called tokens) may be present in this target.ini file,
; as well as in any of the source files of the target. These keywords (tokens)
; will be replaced in the C-Code Generation process by their contents. 
; The tokens.xml file is also created that contains all available tokens and
; their contents for the given model in an XML format.
;
;   VARPREFIX
;      xx_ (default)
;      a general prefix that is applied to all variable names. 
;
;   FUNCTIONPREFIX
;      XX (default)
;      a general prefix that is applied to all function names.
;
;   The array names as they are used in the equations.
;   is combined with VARPREFIX (e.g. xx_V[3]):
;
;   XX_VARIABLE_ARRAY_NAME
; 	   V (default)
;   XX_PARAMETER_ARRAY_NAME
;	   P (default)
;   XX_INITIAL_VALUE_ARRAY_NAME
;	   I (default)
;   XX_CONSTANT_ARRAY_NAME
;	   C (default)
;   XX_STATE_ARRAY_NAME
;	   s (default)
;   XX_RATE_ARRAY_NAME
;	   R (default)
;   XX_DEP_STATE_ARRAY_NAME
;	   S (default)
;   XX_DEP_RATE_ARRAY_NAME
;	   r (default)
;   XX_ALG_IN_ARRAY_NAME
;	   A (default)
;   XX_ALG_OUT_ARRAY_NAME
;	   a (default)
;   XX_EXT_IN_ARRAY_NAME
;	   E (default)
;   XX_EXT_OUT_ARRAY_NAME
;	   e (default)
;   XX_MATRIX_ARRAY_NAME
;	   M (default)
;   XX_UNNAMED_ARRAY_NAME
;	   U (default)
;   XX_FAVORITE_PARS_ARRAY_NAME
;	   F (default)
;   XX_FAVORITE_VARS_ARRAY_NAME
;	   f (default)
;   The number of variables, states, parameters that are in the model:
;
;   NUMBER_CONSTANTS
;   NUMBER_PARAMETERS
;   NUMBER_INITIAL_VALUES
;   NUMBER_VARIABLES
;   NUMBER_ALIAS_VARIABLES
;   NUMBER_STATES
;   NUMBER_DEPSTATES
;   NUMBER_ALGLOOPS
;   NUMBER_CONSTRAINTS
;   NUMBER_IMPORTS
;   NUMBER_EXPORTS
;   NUMBER_INPUTS
;   NUMBER_OUTPUTS
;   NUMBER_MATRICES
;   NUMBER_UNNAMED
;   NUMBER_FAVORITE_PARAMETERS
;   NUMBER_FAVORITE_VARIABLES
;   WORK_ARRAY_SIZE
;   
;   The comma-separated names of variables, states, parameters that are in the model:
;
;   CONSTANT_NAMES
;   PARAMETER_NAMES
;   INITIAL_VALUE_NAMES
;   VARIABLE_NAMES
;   ALIAS_VARIABLE_NAMES
;   STATE_NAMES
;   RATE_NAMES
;   DEPSTATE_NAMES
;   DEPRATE_NAMES
;   ALGEBRAIC_NAMES
;   CONSTRAINT_NAMES
;   IMPORT_NAMES
;   EXPORT_NAMES
;   INPUT_NAMES
;   OUTPUT_NAMES
;   MATRIX_NAMES
;   FAVORITE_PARAMETER_NAMES
;   FAVORITE_VARIABLE_NAMES
;
;   The list above may be followed by the number 2 indicating the name without quotes
;   the list above may be followed by the number 3 indicating that hierarchy slashes ('\')
;   are replaced by underscores ('_')
;
;   Equations that initialize the constants, parameters, states that are in the model:
;
;   INITIALIZE_CONSTANTS
;   INITIALIZE_PARAMETERS
;   INITIALIZE_INITIAL_VALUES
;   INITIALIZE_MATRICES
;   INITIALIZE_STATES
;   INITIALIZE_DEPSTATES
;   INITIALIZE_ALGLOOPS
;   INITIALIZE_CONSTRAINTS
;   INITIALIZE_INPUTS
;   INITIALIZE_OUTPUTS
;   INITIALIZE_FAVORITE_PARS
;   INITIALIZE_FAVORITE_VARS
;   
;   Equations that form the actual C-Code of the model:
;
;   INITIAL_EQUATIONS
;	   Should be calculated once at the beginning of the simulation
;
;   STATIC_EQUATIONS
;	   Static equations that are not dependent of time, states or inputs.
;	   Can be calculated once after the initial equations.
;
;   INPUT_EQUATIONS
;	   Equations that are not static, but cannot be part of the dynamic block.
;          Must be calculated before the dynamic block at each time step (like random functions).
;
;   DYNAMIC_EQUATIONS
;	   The equations that actually calculate the new rates. 
;          Calculated during the integration process one or more times at each time step.
;
;   OUTPUT_EQUATIONS
; 	   Equations that are dynamic, but are not directly needed to calculate the new rates.
;          Calculated after the new rates are calculated in the dynamic equations.
;
;   OUTPUT2_EQUATIONS
;	   Reduced set of equations that calculate only the chosen output variables, such that 
;	   these output variables depend on the states and inputs, not on the rates. 
; 	   The output variables normally do depend on rates and are calculated after the dynamic equations.
; 
;   FINAL_EQUATIONS
;	   Should be calculated once at the end of the simulation
;
;   ALIAS_EQUATIONS
; 	   Equations that are necessary only for the calculation of the alias variables.
;
;   INPUT_TO_VARIABLE_EQUATIONS
;	   Used to copy the input vector of a submodel to the corresponding variables that
; 	   are used in the mentioned equations above.
;
;   VARIABLE_TO_OUTPUT_EQUATIONS
;	   Used to copy the result of the mentioned equations into the output vector of a submodel.
;
;   FAVORITE_PARS_EQUATIONS
;	   Used to copy the favorite parameters from 20-sim to the parameter values in the model.
;
;   FAVORITE_VARS_EQUATIONS
;	   Used to copy the variables values in the model to the favorite variables from 20-sim.
;
;   INTEGRATION_METHOD_NAME
;	Discrete, Euler, RungeKutta4
;	String that describes the chosen name of the integration method.
;
;   XX_TIME
;      time (default)
;      the name of the simulation time variable. 
;      is combined with VARPREFIX (xx_time)
;
;   XX_INITIALIZE
;      initialize (default)
;      the name of the variable that indicates the initialization phase.
;      is combined with VARPREFIX (xx_initialize)
;
;   START_TIME
;	   The specified start time of the simulation
;
;   FINISH_TIME
;      The specified finish time of the simulation
;
;   TIME_STEP_SIZE
;	   The specified time step size of the simulation.
;	   This equals the sample time in case the model is discrete.
;
;   MODEL_IS_DISCRETE
;	   Boolean (XXTRUE, XXFALSE) indicating the discrete character of the model.
;
;   DIRECT_FEEDTHROUGH
;	   Boolean (XXTRUE, XXFALSE) indicating if there is a direct algebraic relation between
;	   the chosen submodel inputs and outputs. 
;
;   FILE_NAME
;	   The name of the current file; the file containing this token
;
;   MODEL_FILE
;	   The file name of the 20-sim model that is used for code generation
;
;   MODEL_NAME
;	   The name of the 20-sim model itself
;
;   SUBMODEL_NAME
;	   The name of the 20-sim submodel that is used
;
;   EXPERIMENT_NAME
;	   The file name of the 20-sim experiment that is used
;   
;   GENERATION_TIME
;	   The time when the code generation process was performed
;
;   GENERATION_DATE
;	   The date when the code generation process was performed
;
;   GENERATION_BUILD
;	   The build version of 20-sim when the code generation process was performed
;
;   GENERATION_DIR
;	   The destination directory of the code generation process
;
;   USER_NAME
;	   The user name of the 20-sim when the code generation process was performed
;
;   COMPANY_NAME
;	   The company name of the 20-sim when the code generation process was performed
;
;   20SIM_DIR
;	   The root directory of 20-sim when the code generation process was performed
;
;   TEMPLATEDIR or TEMPLATE_DIR
;       The root directory of the selected template
;
;	TOKENS
;	   A list of all 20-sim tokens and their contents in XML format
;   
;-----------------------------------------------------------------------------------------

